version: "3.8"
services:
  api:
    # image: thomas-oliver/nestjs-dockerized 
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    # Mount our host Directory to the docker container
    # Mount (.) current directory to the docker container thomas/src/app
    # reflect file changes from host to container
    volumes:
      - .:/src
      - /src/node_modules
    # Run in Debug Mode: npm run start:debug --> Don't forget to start your vscode debugger!
    # Run in dev Mode: npm run start:dev
    command: npm run start:debug

    ports:
      - 3000:3000
      # debugging port
      - 9229:9229

    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_TYPE=postgres
      - PG_HOST=db 
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB=postgres
      - PG_PORT=5432

    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    container_name: postgres_db
    image: postgres:12
    ports:
      - 5432:5432
      # - 9229:9229      
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
        interval: 10s
        retries: 5
        start_period: 30s
        timeout: 10s    

  postgres_admin:
    image: dpage/pgadmin4:9.0
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment: 
      PGADMIN_DEFAULT_EMAIL: admin@admin.de
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 5050:80
    volumes:
        - ./db/servers.json:/pgadmin4/servers.json

volumes:
  pgdata: {}
